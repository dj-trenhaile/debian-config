#!/bin/bash
DEST=$1


if [ ! -d "$DEST" ]; then
    echo "$DEST" not a directory.
    exit 1
fi

if [ -f "$DEST/.last_external_replay" ]; then

    readarray -t changes < <(git diff --name-status -z $(cat $DEST/.last_external_replay) HEAD | tr "\0" "\n")   

    i=0
    while [ $i -lt ${#changes[@]} ]; do
        case ${changes[((i++))]} in
            R*)
                echo "rename: ${changes[i]}"
                rm "$DEST/${changes[((i++))]}"
                cp "${changes[((i++))]}" "$DEST"
                ;;
            A | M)
                echo "append/modify: ${changes[i]}"
                cp "${changes[((i++))]}" "$DEST"
                ;;
            D)
                echo "delete: ${changes[i]}"
                rm "$DEST/${changes[((i++))]}"
                ;;
            *)
                echo "**unknown op: ${changes[((i++))]}"
                ;;
        esac
    done

else
    read -p "No commit marker $DEST/.last_external_replay. Delete destination dir and copy all files? [Y/n] " user_confirmation
    if [ "$user_confirmation" != 'Y' ]; then
        echo Abort.
        exit 1
    fi

    echo Copying...
    git ls-files -z | tr "\0" "\n" | while read file; do
        echo "$file"
        cp "$file" "$DEST"
    done
fi

git rev-parse HEAD > $DEST/.last_external_replay
