# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 22
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r exec pkill polybar; restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'" 

# lockscreen
# bindsym $mod+Shift+x exec "i3lock"
bindsym $mod+Shift+x exec --no-startup-id "playerctl pause; ~/.config/i3/lockscreen/lock_screen.sh"

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
bindsym $mod+d exec rofi -show drun -theme custom_theme
bindsym $mod+f exec rofi -show run -theme custom_theme
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+KP_Multiply focus left
bindsym $mod+l focus down
bindsym $mod+KP_Enter focus down
bindsym $mod+k focus up
bindsym $mod+KP_Add focus up
bindsym $mod+semicolon focus right
bindsym $mod+KP_Subtract focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+KP_Multiply move left
bindsym $mod+Shift+l move down
bindsym $mod+Shift+KP_Enter move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+KP_Add move up
bindsym $mod+Shift+semicolon move right
bindsym $mod+Shift+KP_Subtract move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
# bindsym $mod+f fullscreen toggle  # **conflicts with $PATH applications launcher 

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


# ***
# Notable addition to workspace manipulation is "stacking" of workspace numbers based on the keypad.
# Switching or moving containers to a workspace will always use that workspace's assigned "stack."
# The stacks configured here are 1,4,7; 2,5,8; and 3,6,9.
# Consider an example from this configuration: switching to workspace 9 will always move the user "up" through workspaces 
# 3 and 6 first.
# This structure has no functional impact on a single-display configuration.
# On a multi-display configuration, however, it allows the "stacks" of the numpad to coorespond to specific displays.
# 
# If this behavior is not desired, you should eliminate the extra i3 commands in the proceeding bindings or simply cherry-pick the i3 config from "main"
# ***

# switch to workspace
bindsym $mod+1 workspace 1
bindcode $mod+87 workspace 1
bindsym $mod+mod2+KP_1 workspace 1
bindsym $mod+2 workspace 2
bindcode $mod+88 workspace 2
bindsym $mod+mod2+KP_2 workspace 2
bindsym $mod+3 workspace 3
bindcode $mod+89 workspace 3
bindsym $mod+mod2+KP_3 workspace 3
bindsym $mod+4 workspace 4
bindcode $mod+83 workspace 4
bindsym $mod+mod2+KP_4 workspace 4
bindsym $mod+5 workspace 5
bindcode $mod+84 workspace 5
bindsym $mod+mod2+KP_5 workspace 5
bindsym $mod+6 workspace 6
bindcode $mod+85 workspace 6
bindsym $mod+mod2+KP_6 workspace 6
bindsym $mod+7 workspace 7
bindcode $mod+79 workspace 7
bindsym $mod+mod2+KP_7 workspace 7
bindsym $mod+8 workspace 8
bindcode $mod+80 workspace 8
bindsym $mod+mod2+KP_8 workspace 8
bindsym $mod+9 workspace 9
bindcode $mod+81 workspace 9
bindsym $mod+mod2+KP_9 workspace 9
# free agent:
bindsym $mod+0 workspace 10
bindcode $mod+90 workspace 10
bindsym $mod+mod2+KP_0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindcode $mod+Shift+87 move container to workspace 1; workspace 1
bindsym $mod+Shift+mod2+KP_End move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindcode $mod+Shift+88 move container to workspace 2; workspace 2
bindsym $mod+Shift+mod2+KP_Down move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindcode $mod+Shift+89 move container to workspace 3; workspace 3
bindsym $mod+Shift+mod2+KP_Next move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindcode $mod+Shift+83 move container to workspace 4; workspace 4
bindsym $mod+Shift+mod2+KP_Left move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindcode $mod+Shift+84 move container to workspace 5; workspace 5
bindsym $mod+Shift+mod2+KP_Begin move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindcode $mod+Shift+85 move container to workspace 6; workspace 6
bindsym $mod+Shift+mod2+KP_Right move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindcode $mod+Shift+79 move container to workspace 7; workspace 7
bindsym $mod+Shift+mod2+KP_Home move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindcode $mod+Shift+80 move container to workspace 8; workspace 8
bindsym $mod+Shift+mod2+KP_Up move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindcode $mod+Shift+81 move container to workspace 9; workspace 9
bindsym $mod+Shift+mod2+KP_Prior move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace 10
bindcode $mod+Shift+90 move container to workspace 10
bindsym $mod+Shift+mod2+KP_Insert move container to workspace 10

# arrange workspaces on login (ineffective on in-place reload)
# (not set; template: workspace <workspace number> output <xrandr display identifier>)

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will grow the window’s height.
        # Pressing down will shrink the window’s height.
        bindsym j resize grow  width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize shrink width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize grow width 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Right resize shrink width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#          status_command i3status
#  }
exec_always --no-startup-id "~/.config/polybar/launch.sh"

# sound control
exec --no-startup-id "pulseaudio --start"
bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume @DEFAULT_SINK@ +5%"
bindsym XF86AudioLowerVolume exec "pactl set-sink-volume @DEFAULT_SINK@ -5%"
bindsym XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioPrev exec "playerctl previous"

# brightness control 
bindsym XF86MonBrightnessUp exec --no-startup-id "brightnessctl set 10%+"
bindsym XF86MonBrightnessDown exec --no-startup-id "brightnessctl set 10%-"

# screenshots
bindsym Print exec scrot '%Y-%m-%d-%s_screenshot_$wx$h.jpg' -e 'mv $f ~/Pictures/'
bindsym Control+Print exec gnome-screenshot -i

# load extra mappings (e.g., compose key)
exec --no-startup-id "xmodmap ~/.Xmodmap"

# fix scale of floating "Open File" prompts
for_window [class="xdg-desktop-portal-gnome"] resize set width 35 ppt height 30 ppt

# position bluetooth window
for_window [instance="blueman-manager"] floating enable, resize set width 25 ppt height 20 ppt, move position 65 ppt 76 ppt

# setup display background and compositor
exec --no-startup-id "nitrogen --restore"
exec --no-startup-id "picom --config ~/.config/picom/config --backend xr_glx_hybrid --no-use-damage"

